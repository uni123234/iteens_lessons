# models.py

from sqlalchemy import Column, Integer, String 
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Product(Base):
    __tablename__ = 'products'
    
    id = Column(Integer, primary_key=True)
    name = Column(String)
    description = Column(String)
    price = Column(Integer)
    
# __init__.py

from flask import Flask 
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app.db'

db = SQLAlchemy(app)

from .models import Product

# create.py

from flask import render_template, request, redirect, url_for
from . import app, db
from .models import Product

@app.route('/products/create', methods=['GET', 'POST'])
def create_product():
    if request.method == 'POST':
        name = request.form['name']
        description = request.form['description']
        price = request.form['price']
        
        product = Product(name=name, description=description, price=price)
        db.session.add(product)
        db.session.commit()
        
        return redirect(url_for('index'))
    
    return render_template('create.html')

# index.html

{% extends 'base.html' %}

{% block content %}

<div class="container">
  <h1>Products</h1>  
  
  <a href="{{ url_for('create_product') }}" class="btn btn-primary">Create Product</a>
  
  {% for product in products %}
  
  <div class="card mt-4">
    <div class="card-body">
      <h5 class="card-title">{{ product.name }}</h5>
      <p class="card-text">{{ product.description }}</p>
      <p class="card-text">${{ product.price }}</p>
    </div>
  </div>
  
  {% endfor %}
  
</div>

{% endblock %}

це вид виконнаня просто трохи поки не удобно робити дз але зроблю